swagger: '2.0'
info:
  description: | 
    This document describes a subset of UniConnect Transact&trade; Open Banking API collection.
    These APIs are implemented using REST-like conventions, uses HTTP/1.1 and JSON messages. 

    UniConnect Transact&trade; currently supports Retail (or Personal) and Small-Medium Enterprise
    (or Local Commercial) Banking accounts. The APIs are targeted for developers of consumer facing
    applications, and are not suitable for developing assisted-channel, branch, backoffice or sales
    force applications. 

    The diagram below gives a high-level view of how a typical application (App) will communicate with
    a Bank or FI (Backend) using UniConnect's Open Banking APIs (System). Keep this picture in mind as
    you see references of frontend, system and backend throughout this document. 

        +--------------+       +--------------+       +--------------+
        |     Apps     |       |  UniConnect  |       |   Bank/FIs   |
        |              <------->     APIs     <------->              |
        |  (Frontend)  |       |   (System)   |       |   (Backend)  |
        +--------------+       +--------------+       +--------------+


  version: 2.0.1
  title: Testing API
  contact:
    email: api-support@uniconnect.io
host: uniconnect-transact.azure-api.net
basePath: /
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
paths:
  /security/authentication/access-token:
    post:
      tags:
        - Security
      summary: Validates customer credentials, creates a new server-side session and returns an 
        Access-Token containing sessionid. 
      description: This operation works similar to [OAuth2's Resource Owner Password Credentials
        Grant](https://tools.ietf.org/html/rfc6749#section-4.3) flow.
      operationId: authenticateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Credentials
          description: Email and Password required
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '201':
          description: Successfully logged in.
          schema:
            $ref: '#/definitions/AccessToken'
        '401':
          description: Invalid credentials.
  /customermgmt/welcome/profile:
    get:
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      tags:
        - Customer Management
      summary: Gets customer's basic profile data, such as name, dob and last login time. 
      description: ''
      operationId: getWelcomeProfile
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Profile received successfully.
          schema:
            $ref: '#/definitions/WelcomeProfile'
        '401':
          description: Not Authorized
        '404':
          description: Customer profile not found
  /customermgmt/welcome/messages:
    get:
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      tags:
        - Customer Management
      summary: Gets list of welcome messages and notices, such as new feature announcement or system
        maintenance notice  
      description: ''
      operationId: getWelcomeMessageList
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Messages Retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/WelcomeMessage'
        '401':
          description: Not Authorized
  /customermgmt/profile/relationships:
    get:
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      tags:
        - Customer Management
      summary: Gets list of relationships associated with customer   
      description: > 
        A relationship typically groups one or more accounts together, and may be shared by multiple
        customers. E.g. A joint checking account creates a relationship involving one checking
        account and two (or more) customers. Similarly, a customer could have two relationships each
        containing a pair of checking and savings account. In general, contact details such as
        postal address, phone numbers and email are maintained at a relationship level. Similarly, 
        statements are also generated at relationship level. Some backends may not implement a 
        concept of relationships, in which case this operation will return a 404 response code. 
      operationId: getCustomerRelationships
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Relationship list retrieved successfully 
          schema:
            type: array
            items: 
              $ref: '#/definitions/CustomerRelationship'
        '401':
          description: Not Authorized
        '404':
          description: No relationships found
  /customermgmt/profile/profile: 
    get:
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      tags:
        - Customer Management
      summary: Gets customer's primary or default profile
      description: Customer profile contains data describing the customer, and may includes 
        biographical data, income data, employer details and contact information. 
      operationId: getCustomerPrimaryProfile
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Profile received successfully.
          schema:
            $ref: '#/definitions/CustomerProfile'
        '401':
          description: Not Authorized
        '404':
          description: User profile not found
  /customermgmt/profile/addresses:
    get:
      tags:
        - Customer Management
      summary: Gets list of addresses associated with customer across select or all relationships
      operationId: getPostalAddressList
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: relids
          in: query
          required: false
          description: Optional list of relationship ids to filter output, eg. ["123456", "345678"].
            If not specified, then addresses across all relationships will be returned. 
          type: array
          items: 
            type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Address List retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/PostalAddress'
        '401':
          description: Not Authorized
        '404':
          description: No addresses found
  /customermgmt/profile/addresses/{id}:
    put:
      tags:
        - Customer Management
      summary: Updates specified customer address object 
      description: ''
      operationId: updatePostalAddress
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PostalAddress'
      produces:
        - application/json
      responses:
        '200':
          description: Address updated successfully
          schema:
            $ref: '#/definitions/AddressUpdateResponse'
        '401':
          description: Not Authorized
        '404':
          description: Address not found
  /customermgmt/profile/telephones:
    get:
      tags:
        - Customer Management
      summary: Gets list of telephones associated with customer across select or all relationships
      operationId: getTelephoneList
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: relids
          in: query
          required: false
          description: Optional list of relationship ids to filter output, eg. ["123456", "345678"].
            If not specified, then telephones across all relationships will be returned. 
          type: array
          items: 
            type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Telephone list retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Telephone'
        '401':
          description: Not Authorized
        '404':
          description: No telephones found
  /customermgmt/profile/telephones/{id}:
    put:
      tags:
        - Customer Management
      summary: Updates specified customer telephone object 
      description: ''
      operationId: updateTelephone
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Telephone'
      produces:
        - application/json
      responses:
        '200':
          description: Telephone updated successfully
          schema:
            $ref: '#/definitions/TelephoneUpdateResponse'
        '401':
          description: Not Authorized
        '404':
          description: Telephone not found
  /customermgmt/profile/emails:
    get:
      tags:
        - Customer Management
      summary: Gets list of emails associated with customer across select or all relationships
      operationId: getEmailList
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: relids
          in: query
          required: false
          description: Optional list of relationship ids to filter output, eg. ["123456", "345678"].
            If not specified, then emails across all relationships will be returned. 
          type: array
          items: 
            type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Email list retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Email'
        '401':
          description: Not Authorized
        '404':
          description: No emails found
  /customermgmt/profile/emails/{id}:
    put:
      tags:
        - Customer Management
      summary: Updates specified customer email object 
      description: ''
      operationId: updateEmail
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Email'
      produces:
        - application/json
      responses:
        '200':
          description: Email updated successfully
          schema:
            $ref: '#/definitions/EmailUpdateResponse'
        '401':
          description: Not Authorized
        '404':
          description: Email not found
  /accountmgmt/retail/accounts:
    get:
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
      tags:
        - Account Management
      summary: Gets list of retail accounts linked to customer across all relationships
      description: Retail accounts are banking products offered to consumers. These include checking
        and savings accounts, term deposits, personal loans, mortgage, credit line, and credit cards. 
        It is distinct from commercial bank accounts, investment accounts and capital markets.  
      operationId: getRetailAccountList
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Account List retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/RetailAccount'
        '401':
          description: Not Authorized
  '/accountmgmt/retail/accounts/{id}':
    get:
      tags:
        - Account Management
      summary: Gets account details and balances for a given account
      description: ''
      operationId: getRetailAccountDetails
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Account details retrieved successfully
          schema:
            $ref: '#/definitions/AccountDetail'
        '401':
          description: Not Authorized
  '/accountmgmt/retail/accounts/{id}/transactions':
    get:
      tags:
        - Account Management
      summary: Gets transactions history for a given account
      description: ''
      operationId: getAccountTransactionHistory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: id
          in: path
          required: true
          type: string
          description: ID referencing the requested account 
        - name: fromDate
          in: query
          type: string
          description: Transaction history start date
          format: date
        - name: toDate
          in: query
          type: string
          description: Transaction history end date 
          format: date
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Not Authorized
  '/payments/transfer/ft':
    post:
      tags:
        - Payments
      summary: Transfer funds from one linked account to another
      description: ''
      operationId: fundTransfer
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - name: transaction
          in: body
          schema:
            $ref: '#/definitions/FundTransfer'
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            items:
              $ref: '#/definitions/TxnResponse'
        '401':
          description: Not Authorized
definitions: